#pragma once
#include "base/ccConfig.h"

#include "cocos/scripting/js-bindings/jswrapper/SeApi.h"

extern se::Object* __jsb_sdkbox_PluginApteligent_proto;
extern se::Class* __jsb_sdkbox_PluginApteligent_class;

bool js_register_sdkbox_PluginApteligent(se::Object* obj);
bool register_all_PluginApteligentJS(se::Object* obj);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_beginUserflow);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setLoggingLevel);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setOptOutStatus);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setValueforKey);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setAsyncBreadcrumbMode);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_endUserflow);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setUsername);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_init);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_maxOfflineCrashReports);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_updateLocation);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_valueForUserflow);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_logNetworkRequest);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_sendAppLoadData);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setMaxOfflineCrashReports);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_getUserUUID);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_cancelUserflow);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_setValueforUserflow);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_didCrashOnLastLoad);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_addFilter);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_leaveBreadcrumb);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_getOptOutStatus);
SE_DECLARE_FUNC(js_PluginApteligentJS_PluginApteligent_failUserflow);

